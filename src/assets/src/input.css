@tailwind base;
@tailwind components;
@tailwind utilities;

/* Custom CSS */
* {
  @apply transition-colors duration-200;
}

body {
  font-family:
    system-ui,
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    Roboto,
    Oxygen,
    Ubuntu,
    Cantarell,
    "Open Sans",
    "Helvetica Neue",
    sans-serif;
}

nav.scrolled {
  @apply shadow-2xl;
  border-bottom: 0px;
}
#btn-more {
  display: none;
}

@media screen and (max-width: 640px) {
  #about-more {
    display: none;
  }
  #btn-more {
    display: block;
  }
}

.icons {
  font-size: 32px;
}

@media screen and (max-width: 640px) {
  .icons {
    font-size: 20px;
  }
}

/* Phone screens */
@media screen and (max-width: 640px) {
  .nav-div {
    padding-left: 0;
    padding-right: 0;
  }
  .middle-nav {
    display: none;
  }
  .right-nav {
    display: flex;
  }
}

h1 {
  @apply underline decoration-rose-600 decoration-4 underline-offset-8;
  @apply text-3xl font-bold;
  /* font-size: 1.5rem;
    line-height: 2rem;
    font-weight: bold; */
}

h2 {
  @apply text-xl;
}

.hero {
  grid-row-gap: 20px;
}

@media screen and (max-width: 1024px) {
  .hero {
    flex-wrap: wrap;
    display: flex;
    justify-content: center;
  }
  .hero-left {
    display: flex;
  }
}

.section {
  @apply lg:px-36;
}

.section-desc {
  @apply text-xl;
}

#small-text {
  font-size: 1rem;
}

.blackjack-pic {
  height: 23rem;
}

@media screen and (max-width: 640px) {
  .blackjack-pic {
    height: 14rem;
  }
}

.mobile-view {
  display: none;
}

@media screen and (max-width: 640px) {
  .normal-view {
    display: none;
  }
  .mobile-view {
    display: inline-flex;
  }
  .more-desc {
    display: none;
  }
}

#msg {
  display: none;
  transition: all 1s ease;
  opacity: 1;
}

/* Ensure each carousel item takes full width */
.carousel-item {
  width: 100%;
  display: flex;
  justify-content: center; /* Center horizontally */
  align-items: center; /* Center vertically */
}

/* Carousel needs this  */

.btn {
  display: inline-flex;
  height: 3rem;
  min-height: 3rem;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  border-radius: var(--rounded-btn, 0.5rem);
  border-color: transparent;
  border-color: oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity));
  padding-left: 1rem;
  padding-right: 1rem;
  text-align: center;
  font-size: 0.875rem;
  line-height: 1em;
  gap: 0.5rem;
  font-weight: 600;
  text-decoration-line: none;
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  border-width: var(--border-btn, 1px);
  animation: button-pop var(--animation-btn, 0.25s) ease-out;
  transition-property: color, background-color, border-color, opacity,
    box-shadow, transform;
  --tw-text-opacity: 1;
  color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: var(--fallback-bc, oklch(var(--bc) / 1));
  background-color: oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity));
  --tw-bg-opacity: 1;
  --tw-border-opacity: 1;
}
.btn-disabled,
.btn[disabled],
.btn:disabled {
  pointer-events: none;
}
.btn-circle {
  height: 3rem;
  width: 3rem;
  border-radius: 9999px;
  padding: 0px;
}
:where(.btn:is(input[type="checkbox"])),
:where(.btn:is(input[type="radio"])) {
  width: auto;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
.btn:is(input[type="checkbox"]):after,
.btn:is(input[type="radio"]):after {
  --tw-content: attr(aria-label);
  content: var(--tw-content);
}

.carousel-item {
  box-sizing: content-box;
  display: flex;
  flex: none;
  scroll-snap-align: start;
}
.carousel-start .carousel-item {
  scroll-snap-align: start;
}
.carousel-center .carousel-item {
  scroll-snap-align: center;
}
.carousel-end .carousel-item {
  scroll-snap-align: end;
}

btn:hover {
  --tw-border-opacity: 1;
  border-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-b3, oklch(var(--b3) / var(--tw-bg-opacity)));
}
@supports (color: color-mix(in oklab, black, black)) {
  .btn:hover {
    background-color: color-mix(
      in oklab,
      oklch(var(--btn-color, var(--b2)) / var(--tw-bg-opacity, 1)) 90%,
      black
    );
    border-color: color-mix(
      in oklab,
      oklch(var(--btn-color, var(--b2)) / var(--tw-border-opacity, 1)) 90%,
      black
    );
  }
}
@supports not (color: oklch(0 0 0)) {
  .btn:hover {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }
}
.btn.glass:hover {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}
.btn-disabled:hover,
.btn[disabled]:hover,
.btn:disabled:hover {
  --tw-border-opacity: 0;
  background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
  --tw-bg-opacity: 0.2;
  color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
  --tw-text-opacity: 0.2;
}
@supports (color: color-mix(in oklab, black, black)) {
  .btn:is(input[type="checkbox"]:checked):hover,
  .btn:is(input[type="radio"]:checked):hover {
    background-color: color-mix(
      in oklab,
      var(--fallback-p, oklch(var(--p) / 1)) 90%,
      black
    );
    border-color: color-mix(
      in oklab,
      var(--fallback-p, oklch(var(--p) / 1)) 90%,
      black
    );
  }
}

btn:active:hover,
.btn:active:focus {
  animation: button-pop 0s ease-out;
  transform: scale(var(--btn-focus-scale, 0.97));
}
@supports not (color: oklch(0 0 0)) {
  .btn {
    background-color: var(--btn-color, var(--fallback-b2));
    border-color: var(--btn-color, var(--fallback-b2));
  }
}
.btn:focus-visible {
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}
.btn.glass {
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  outline-color: currentColor;
}
.btn.glass.btn-active {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}
.btn.btn-disabled,
.btn[disabled],
.btn:disabled {
  --tw-border-opacity: 0;
  background-color: var(--fallback-n, oklch(var(--n) / var(--tw-bg-opacity)));
  --tw-bg-opacity: 0.2;
  color: var(--fallback-bc, oklch(var(--bc) / var(--tw-text-opacity)));
  --tw-text-opacity: 0.2;
}
.btn:is(input[type="checkbox"]:checked),
.btn:is(input[type="radio"]:checked) {
  --tw-border-opacity: 1;
  border-color: var(--fallback-p, oklch(var(--p) / var(--tw-border-opacity)));
  --tw-bg-opacity: 1;
  background-color: var(--fallback-p, oklch(var(--p) / var(--tw-bg-opacity)));
  --tw-text-opacity: 1;
  color: var(--fallback-pc, oklch(var(--pc) / var(--tw-text-opacity)));
}
.btn:is(input[type="checkbox"]:checked):focus-visible,
.btn:is(input[type="radio"]:checked):focus-visible {
  outline-color: var(--fallback-p, oklch(var(--p) / 1));
}

.btn-circle:where(.btn-xs) {
  height: 1.5rem;
  width: 1.5rem;
  border-radius: 9999px;
  padding: 0px;
}
.btn-circle:where(.btn-sm) {
  height: 2rem;
  width: 2rem;
  border-radius: 9999px;
  padding: 0px;
}
.btn-circle:where(.btn-md) {
  height: 3rem;
  width: 3rem;
  border-radius: 9999px;
  padding: 0px;
}
.btn-circle:where(.btn-lg) {
  height: 4rem;
  width: 4rem;
  border-radius: 9999px;
  padding: 0px;
}

.inset-x-0 {
  left: 0px;
  right: 0px;
}

.left-5 {
  left: 1.25rem;
}

.right-5 {
  right: 1.25rem;
}

.aspect-auto {
  aspect-ratio: auto;
}

.max-h-\[95vh\] {
  max-height: 95vh;
}

.w-screen {
  .w-screen {
    width: 100vw;
  }
  .w-\[100vw\] {
    width: 100vw;
    width: 100vw;
  }
}

.object-contain {
  -o-object-fit: contain;
  object-fit: contain;
}

.hover\:bg-gray-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}
